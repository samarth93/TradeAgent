{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/auth';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nconst authService = {\n  // User login\n  login: async credentials => {\n    try {\n      const response = await api.post('/login', credentials);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        error: 'Login failed'\n      };\n    }\n  },\n  // User signup\n  signup: async userData => {\n    try {\n      const response = await api.post('/signup', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        error: 'Signup failed'\n      };\n    }\n  },\n  // User logout\n  logout: async () => {\n    try {\n      await api.post('/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  },\n  // Get current user info\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/me');\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        error: 'Failed to get user info'\n      };\n    }\n  },\n  // Check if user is authenticated\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n  // Get auth token\n  getToken: () => {\n    return localStorage.getItem('token');\n  },\n  // Remove auth token\n  removeToken: () => {\n    localStorage.removeItem('token');\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","credentials","post","data","_error$response2","signup","userData","_error$response3","logout","console","getCurrentUser","get","_error$response4","isAuthenticated","getToken","removeToken"],"sources":["/home/samarth/Desktop/TradeAgent/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/auth';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst authService = {\n  // User login\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/login', credentials);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { error: 'Login failed' };\n    }\n  },\n\n  // User signup\n  signup: async (userData) => {\n    try {\n      const response = await api.post('/signup', userData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { error: 'Signup failed' };\n    }\n  },\n\n  // User logout\n  logout: async () => {\n    try {\n      await api.post('/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  },\n\n  // Get current user info\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/me');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { error: 'Failed to get user info' };\n    }\n  },\n\n  // Check if user is authenticated\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n\n  // Get auth token\n  getToken: () => {\n    return localStorage.getItem('token');\n  },\n\n  // Remove auth token\n  removeToken: () => {\n    localStorage.removeItem('token');\n  }\n};\n\nexport default authService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}